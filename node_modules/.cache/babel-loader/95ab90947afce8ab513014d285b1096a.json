{"remainingRequest":"E:\\图形开发\\Projects\\3d_City\\node_modules\\babel-loader\\lib\\index.js!E:\\图形开发\\Projects\\3d_City\\node_modules\\eslint-loader\\index.js??ref--14-0!E:\\图形开发\\Projects\\3d_City\\src\\components\\js\\Wall.js","dependencies":[{"path":"E:\\图形开发\\Projects\\3d_City\\src\\components\\js\\Wall.js","mtime":1647503769000},{"path":"E:\\图形开发\\Projects\\3d_City\\babel.config.js","mtime":1647503769000},{"path":"E:\\图形开发\\Projects\\3d_City\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\图形开发\\Projects\\3d_City\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\图形开发\\Projects\\3d_City\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJFOlxcXHU1NkZFXHU1RjYyXHU1RjAwXHU1M0QxXFxQcm9qZWN0c1xcM2RfQ2l0eVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcY2xhc3NDYWxsQ2hlY2suanMiOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkU6XFxcdTU2RkVcdTVGNjJcdTVGMDBcdTUzRDFcXFByb2plY3RzXFwzZF9DaXR5XFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CgovKiBlc2xpbnQtZGlzYWJsZSAqLwppbXBvcnQgKiBhcyBUSFJFRSBmcm9tICJ0aHJlZSI7Ci8qKgogKiDms6LliqjlopkKICogQHBhcmFtICBvcHRpb25zLnNjZW5lIHRocmVl5Zy65pmvCiAqIEBwYXJhbSAgb3B0aW9ucy5yYWRpdXMg5Lit5b+DCiAqIEBwYXJhbSAgb3B0aW9ucy5oZWlnaHQg5aKZ6auY5bqmCiAqIEBwYXJhbSAgb3B0aW9ucy5vcGFjaXR5IOWimemAj+aYjuW6pgogKiBAcGFyYW0gIG9wdGlvbnMuY29sb3Ig5aKZ6aKc6ImyCiAqIEBleGFtcGxlCiAqLwoKdmFyIFdhbGwgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFdhbGwob3B0aW9uKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgV2FsbCk7CgogICAgdGhpcy5zY2VuZSA9IG9wdGlvbi5zY2VuZTsKICAgIHRoaXMucmFkaXVzID0gb3B0aW9uLnJhZGl1cyB8fCA0MjA7CiAgICB0aGlzLmhlaWdodCA9IG9wdGlvbi5oZWlnaHQgfHwgMTIwOwogICAgdGhpcy5vcGFjaXR5ID0gb3B0aW9uLm9wYWNpdHkgfHwgMC41OwogICAgdGhpcy5jb2xvciA9IG9wdGlvbi5jb2xvciB8fCAiI2VmYWQzNSI7CiAgICB0aGlzLnNwZWVkID0gb3B0aW9uLnNwZWVkIHx8IDAuNTsKICAgIHRoaXMubWVzaCA9ICIiOyAvL+eUn+aIkOeahOaooeWei+aVsOaNrgoKICAgIHRoaXMuQ3JlYXRSaW5nKCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoV2FsbCwgW3sKICAgIGtleTogIkNyZWF0UmluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gQ3JlYXRSaW5nKCkgewogICAgICB2YXIgdmVydGV4U2hhZGVyID0gIlxudW5pZm9ybSB2ZWMzIHVfY29sb3I7XG51bmlmb3JtIGZsb2F0IHRpbWU7XG51bmlmb3JtIGZsb2F0IHVfaGVpZ2h0O1xuIFxudmFyeWluZyBmbG9hdCB2X29wYWNpdHk7XG5cbnZvaWQgbWFpbigpIHtcbi8vXHU2QTIxXHU1NzhCXHU3MEI5XHU0RjREXHU3RjZFXHU0RTU4XHU0RUU1XHU0RTAwXHU0RTJBMC4wLTEuMFx1NzY4NFx1N0NGQlx1NjU3MFx1RkYwQ1x1Njc2NVx1NkEyMVx1NjJERlx1NjI2OVx1NjU2M1x1NjU0OFx1Njc5Q1x1MzAwMlxuICAgIHZlYzMgdlBvc2l0aW9uID0gcG9zaXRpb24gKiBtb2QodGltZS8yMC4wLCAxLjApO1xuLy9cdTZBMjFcdTU3OEJcdTc2ODRcdTkwMEZcdTY2MEVcdTVFQTZcdTU0OENcdTZBMjFcdTU3OEJcdTc2ODRcdTlBRDhcdTVFQTZcdTU0NDhcdTUzQ0RcdTZCRDRcbiAgICB2X29wYWNpdHkgPTEuMC0gcG9zaXRpb24ueSAvIHVfaGVpZ2h0O1xuICAgIGdsX1Bvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHZlYzQodlBvc2l0aW9uLCAxLjApO1xufVxuIjsKICAgICAgdmFyIGZyYWdtZW50U2hhZGVyID0gIiBcbnVuaWZvcm0gdmVjMyB1X2NvbG9yO1xudW5pZm9ybSBmbG9hdCB1X29wYWNpdHk7XG4gXG52YXJ5aW5nIGZsb2F0IHZfb3BhY2l0eTtcblxudm9pZCBtYWluKCkgeyBcbiAgICAvL3VfY29sb3JcdTY2MkZcdTk4OUNcdTgyNzIgdl9vcGFjaXR5ICogdV9vcGFjaXR5XHU2NjJGXHU5QUQ4XHU1RUE2XHU2MjQwXHU0RUE3XHU3NTFGXHU3Njg0XHU5MDBGXHU2NjBFXHU2NTQ4XHU2NzlDXHU1NDhDXHU2QTIxXHU1NzhCXHU0RjIwXHU1MTY1XHU3Njg0XHU5MDBGXHU2NjBFXHU1RUE2XHU3Njg0XHU0RTU4XHU3OUVGXHUzMDAyXG4gICAgZ2xfRnJhZ0NvbG9yID0gdmVjNCh1X2NvbG9yLCB2X29wYWNpdHkgKiB1X29wYWNpdHkpO1xufVxuIjsgLy/ojrflj5blj4LmlbAKCiAgICAgIHZhciByYWRpdXMgPSB0aGlzLnJhZGl1cywKICAgICAgICAgIGhlaWdodCA9IHRoaXMuaGVpZ2h0LAogICAgICAgICAgb3BhY2l0eSA9IHRoaXMub3BhY2l0eSwKICAgICAgICAgIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICAgIHNwZWVkID0gdGhpcy5zcGVlZCwKICAgICAgICAgIHJlbmRlck9yZGVyID0gdGhpcy5yZW5kZXJPcmRlcjsgLy/nlJ/miJDmqKHlnovnu5PmnoQKCiAgICAgIHZhciBnZW9tZXRyeSA9IG5ldyBUSFJFRS5DeWxpbmRlckdlb21ldHJ5KHJhZGl1cywgcmFkaXVzLCBoZWlnaHQsIDMyLCAxLCB0cnVlKTsgLy/mqKHlnovkvY3nva7orr7nva4KCiAgICAgIGdlb21ldHJ5LnRyYW5zbGF0ZSgwLCBoZWlnaHQgLyAyLCAwKTsgLy/oh6rlrprkuYnmqKHlnovmnZDotKgKCiAgICAgIHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5TaGFkZXJNYXRlcmlhbCh7CiAgICAgICAgdW5pZm9ybXM6IHsKICAgICAgICAgIHVfaGVpZ2h0OiB7CiAgICAgICAgICAgIHZhbHVlOiBoZWlnaHQKICAgICAgICAgIH0sCiAgICAgICAgICB1X29wYWNpdHk6IHsKICAgICAgICAgICAgdmFsdWU6IG9wYWNpdHkKICAgICAgICAgIH0sCiAgICAgICAgICB1X2NvbG9yOiB7CiAgICAgICAgICAgIHZhbHVlOiBuZXcgVEhSRUUuQ29sb3IoY29sb3IpCiAgICAgICAgICB9LAogICAgICAgICAgdGltZTogewogICAgICAgICAgICB2YWx1ZTogMAogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdHJhbnNwYXJlbnQ6IHRydWUsCiAgICAgICAgZGVwdGhXcml0ZTogZmFsc2UsCiAgICAgICAgZGVwdGhUZXN0OiBmYWxzZSwKICAgICAgICBzaWRlOiBUSFJFRS5Eb3VibGVTaWRlLAogICAgICAgIHZlcnRleFNoYWRlcjogdmVydGV4U2hhZGVyLAogICAgICAgIGZyYWdtZW50U2hhZGVyOiBmcmFnbWVudFNoYWRlcgogICAgICB9KTsgLy/nu4TlkIjmnZDotKjlkoznu5PmnoTnlJ/miJDlr7nosaEKCiAgICAgIHZhciBtZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsKTsgLy/orr7nva7mqKHlnovpga7mjKHvvIzmiorov5nkuKrmqKHlnovmlL7liLDmnIDliY3pnaLpmLLmraLpga7mjKEKCiAgICAgIG1lc2gucmVuZGVyT3JkZXIgPSByZW5kZXJPcmRlciB8fCAxOwogICAgICB0aGlzLm1lc2ggPSBtZXNoOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFdhbGw7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IFdhbGw7"},{"version":3,"sources":["E:/图形开发/Projects/3d_City/src/components/js/Wall.js"],"names":["THREE","Wall","option","scene","radius","height","opacity","color","speed","mesh","CreatRing","vertexShader","fragmentShader","renderOrder","geometry","CylinderGeometry","translate","material","ShaderMaterial","uniforms","u_height","value","u_opacity","u_color","Color","time","transparent","depthWrite","depthTest","side","DoubleSide","Mesh"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,I;AACJ,gBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKC,KAAL,GAAaD,MAAM,CAACC,KAApB;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACE,MAAP,IAAiB,GAA/B;AACA,SAAKC,MAAL,GAAcH,MAAM,CAACG,MAAP,IAAiB,GAA/B;AACA,SAAKC,OAAL,GAAeJ,MAAM,CAACI,OAAP,IAAkB,GAAjC;AACA,SAAKC,KAAL,GAAaL,MAAM,CAACK,KAAP,IAAgB,SAA7B;AACA,SAAKC,KAAL,GAAaN,MAAM,CAACM,KAAP,IAAgB,GAA7B;AACA,SAAKC,IAAL,GAAY,EAAZ,CAPkB,CAOF;;AAChB,SAAKC,SAAL;AACD;;;;WACD,qBAAY;AACV,UAAMC,YAAY,ohBAAlB;AAeA,UAAMC,cAAc,4WAApB,CAhBU,CA2Bd;;AACI,UAAQR,MAAR,GAA+D,IAA/D,CAAQA,MAAR;AAAA,UAAgBC,MAAhB,GAA+D,IAA/D,CAAgBA,MAAhB;AAAA,UAAwBC,OAAxB,GAA+D,IAA/D,CAAwBA,OAAxB;AAAA,UAAiCC,KAAjC,GAA+D,IAA/D,CAAiCA,KAAjC;AAAA,UAAwCC,KAAxC,GAA+D,IAA/D,CAAwCA,KAAxC;AAAA,UAA+CK,WAA/C,GAA+D,IAA/D,CAA+CA,WAA/C,CA5BU,CA6Bd;;AACI,UAAMC,QAAQ,GAAG,IAAId,KAAK,CAACe,gBAAV,CACfX,MADe,EAEfA,MAFe,EAGfC,MAHe,EAIf,EAJe,EAKf,CALe,EAMf,IANe,CAAjB,CA9BU,CAsCV;;AACAS,MAAAA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBX,MAAM,GAAG,CAA/B,EAAkC,CAAlC,EAvCU,CAwCV;;AACA,UAAMY,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,cAAV,CAAyB;AACxCC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,KAAK,EAAEhB;AADC,WADF;AAIRiB,UAAAA,SAAS,EAAE;AACTD,YAAAA,KAAK,EAAEf;AADE,WAJH;AAORiB,UAAAA,OAAO,EAAE;AACPF,YAAAA,KAAK,EAAE,IAAIrB,KAAK,CAACwB,KAAV,CAAgBjB,KAAhB;AADA,WAPD;AAURkB,UAAAA,IAAI,EAAE;AACJJ,YAAAA,KAAK,EAAE;AADH;AAVE,SAD8B;AAexCK,QAAAA,WAAW,EAAE,IAf2B;AAgBxCC,QAAAA,UAAU,EAAE,KAhB4B;AAiBxCC,QAAAA,SAAS,EAAE,KAjB6B;AAkBxCC,QAAAA,IAAI,EAAE7B,KAAK,CAAC8B,UAlB4B;AAmBxCnB,QAAAA,YAAY,EAAEA,YAnB0B;AAoBxCC,QAAAA,cAAc,EAAEA;AApBwB,OAAzB,CAAjB,CAzCU,CA+DV;;AACA,UAAMH,IAAI,GAAG,IAAIT,KAAK,CAAC+B,IAAV,CAAejB,QAAf,EAAyBG,QAAzB,CAAb,CAhEU,CAiEV;;AACAR,MAAAA,IAAI,CAACI,WAAL,GAAmBA,WAAW,IAAI,CAAlC;AACA,WAAKJ,IAAL,GAAYA,IAAZ;AACD;;;;;;AAGH,eAAeR,IAAf","sourcesContent":["/* eslint-disable */\nimport * as THREE from \"three\";\n/**\n * 波动墙\n * @param  options.scene three场景\n * @param  options.radius 中心\n * @param  options.height 墙高度\n * @param  options.opacity 墙透明度\n * @param  options.color 墙颜色\n * @example\n */\n\nclass Wall {\n  constructor(option) {\n    this.scene = option.scene;\n    this.radius = option.radius || 420;\n    this.height = option.height || 120;\n    this.opacity = option.opacity || 0.5;\n    this.color = option.color || \"#efad35\";\n    this.speed = option.speed || 0.5;\n    this.mesh = \"\"; //生成的模型数据\n    this.CreatRing();\n  }\n  CreatRing() {\n    const vertexShader = `\nuniform vec3 u_color;\nuniform float time;\nuniform float u_height;\n \nvarying float v_opacity;\n\nvoid main() {\n//模型点位置乘以一个0.0-1.0的系数，来模拟扩散效果。\n    vec3 vPosition = position * mod(time/20.0, 1.0);\n//模型的透明度和模型的高度呈反比\n    v_opacity =1.0- position.y / u_height;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1.0);\n}\n`;\n    const fragmentShader = ` \nuniform vec3 u_color;\nuniform float u_opacity;\n \nvarying float v_opacity;\n\nvoid main() { \n    //u_color是颜色 v_opacity * u_opacity是高度所产生的透明效果和模型传入的透明度的乘积。\n    gl_FragColor = vec4(u_color, v_opacity * u_opacity);\n}\n`;\n//获取参数\n    const { radius, height, opacity, color, speed, renderOrder } = this;\n//生成模型结构\n    const geometry = new THREE.CylinderGeometry(\n      radius,\n      radius,\n      height,\n      32,\n      1,\n      true\n    );\n    //模型位置设置\n    geometry.translate(0, height / 2, 0);\n    //自定义模型材质\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        u_height: {\n          value: height,\n        },\n        u_opacity: {\n          value: opacity,\n        },\n        u_color: {\n          value: new THREE.Color(color),\n        },\n        time: {\n          value: 0,\n        },\n      },\n      transparent: true,\n      depthWrite: false,\n      depthTest: false,\n      side: THREE.DoubleSide,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n    });\n    //组合材质和结构生成对象\n    const mesh = new THREE.Mesh(geometry, material);\n    //设置模型遮挡，把这个模型放到最前面防止遮挡\n    mesh.renderOrder = renderOrder || 1;\n    this.mesh = mesh;\n  }\n}\n\nexport default Wall;\n"]}]}