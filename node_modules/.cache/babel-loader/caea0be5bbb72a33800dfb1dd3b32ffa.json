{"remainingRequest":"E:\\可视化工程\\Projects\\3d_City\\node_modules\\babel-loader\\lib\\index.js!E:\\可视化工程\\Projects\\3d_City\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\可视化工程\\Projects\\3d_City\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\可视化工程\\Projects\\3d_City\\src\\components\\scene.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\可视化工程\\Projects\\3d_City\\src\\components\\scene.vue","mtime":1647503769000},{"path":"E:\\可视化工程\\Projects\\3d_City\\babel.config.js","mtime":1647503769000},{"path":"E:\\可视化工程\\Projects\\3d_City\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680804470900},{"path":"E:\\可视化工程\\Projects\\3d_City\\node_modules\\babel-loader\\lib\\index.js","mtime":1680804470891},{"path":"E:\\可视化工程\\Projects\\3d_City\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1680804470900},{"path":"E:\\可视化工程\\Projects\\3d_City\\node_modules\\vue-loader\\lib\\index.js","mtime":1680804488154}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["scene.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"scene\"></div>\n</template>\n<script>\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport Wall from \"./js/Wall\";\nimport RunRing from \"./js/RunRing\";\nimport RunLine from \"./js/RunLine\";\nlet scene; //场景\nlet camera; //相机\nlet renderer; //创建渲染器\n// eslint-disable-next-line no-unused-vars\nlet controls; //控制器\nlet pickingScene, pickingTexture; //离屏渲染\n\nexport default {\n  mounted() {\n    this.init();\n    this.createControls();\n    this.addGLTF();\n    this.render();\n    this.creatWall();\n    // this.creatRing();\n    this.creatRunLine();\n    window.addEventListener(\"click\", this.onDocumentMouseDown);\n  },\n  methods: {\n    init() {\n      //创建场景\n      scene = new THREE.Scene();\n      //天空盒\n\n      const textureCube = new THREE.CubeTextureLoader().load([\n        \"1.jpg\",\n        \"2.jpg\",\n        \"3.jpg\",\n        \"4.jpg\",\n        \"5.jpg\",\n        \"6.jpg\",\n      ]);\n      scene.background = textureCube; // 作为背景贴图\n      /**\n       * 透视投影相机设置\n       */\n      const width = window.innerWidth; // 窗口宽度\n      const height = window.innerHeight; // 窗口高度\n\n      /** 透视投影相机对象 */\n      camera = new THREE.PerspectiveCamera(60, width / height, 1, 100000);\n      camera.position.set(600, 900, 600); // 树上面观察\n      camera.lookAt(scene.position); // 设置相机方向(指向的场景对象)\n      // 创建渲染器对象\n      const container = document.getElementById(\"scene\");\n      renderer = new THREE.WebGLRenderer({ antialias: true });\n      renderer.setSize(container.clientWidth, container.clientHeight); // 设置渲染区域尺寸\n      container.appendChild(renderer.domElement); // body元素中插入canvas对象\n\n      //创建点光源和环境光源\n      const point = new THREE.PointLight(0xffffff);\n      point.position.set(600, 900, 600); // 点光源位置\n      scene.add(point); // 点光源添加到场景中\n      // 环境光\n      const ambient = new THREE.AmbientLight(0x404040, 1);\n      scene.add(ambient);\n      pickingScene = new THREE.Scene(); //离屏渲染\n      pickingTexture = new THREE.WebGLRenderTarget(1, 1); //离屏渲染\n    },\n    createControls() {\n      controls = new OrbitControls(camera, renderer.domElement);\n    },\n    render() {\n      this.cityanimate();\n      renderer.setRenderTarget(null);\n      renderer.render(scene, camera);\n      requestAnimationFrame(this.render); // 请求再次执行渲染函数render\n    },\n    addGLTF() {\n      const loader = new GLTFLoader();\n      loader.load(\"shanghai.gltf\", (gltf) => {\n        gltf.scene.traverse((child) => {\n          // 设置线框材质\n          if (child.isMesh) {\n            //这个判断模型是楼房还是其他  加载不同的材质\n            if ([\"CITY_UNTRIANGULATED\"].includes(child.name)) {\n              // 拿到模型线框的Geometry\n              this.setCityLineMaterial(child);\n              this.setCityMaterial(child);\n            } else if ([\"ROADS\"].includes(child.name)) {\n              //道路\n              const material = new THREE.MeshBasicMaterial({\n                color: \"rgb(41,46,76)\",\n              });\n              const mesh = new THREE.Mesh(child.geometry, material);\n              mesh.rotateX(-Math.PI / 2);\n              mesh.position.set(\n                child.position.x,\n                child.position.y,\n                child.position.z\n              );\n              scene.add(mesh);\n            } else {\n              //地面\n              const material = new THREE.MeshBasicMaterial({\n                color: \"#040912\",\n              });\n              const mesh = new THREE.Mesh(child.geometry, material);\n              scene.add(mesh);\n              mesh.rotateX(-Math.PI / 2);\n              mesh.position.set(\n                child.position.x,\n                child.position.y,\n                child.position.z\n              );\n            }\n          }\n          // 设置线框材质\n        });\n      });\n    },\n    setCityMaterial(object) {\n      const shader = new THREE.ShaderMaterial({\n        uniforms: {\n          height: this.height,\n          uFlowColor: {\n            value: new THREE.Color(\"#5588aa\"),\n          },\n          uCityColor: {\n            value: new THREE.Color(\"#1B3045\"),\n          },\n        },\n        vertexShader: `\n                varying vec3 vPosition;\n                void main()\n                {\n                  vPosition = position;\n                  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }`,\n        fragmentShader: `\nfloat distanceTo(vec2 src,vec2 dst)\n{\n    float dx=src.x-dst.x;\n    float dy=src.y-dst.y;\n    float dv=dx*dx+dy*dy;\n    return sqrt(dv);\n}\nvarying vec3 vPosition;\nuniform float height;\nuniform float uStartTime;\nuniform vec3 uSize;\nuniform vec3 uFlowColor;\nuniform vec3 uCityColor;\nvoid main()\n{\n    //模型的基础颜色\n    vec3 distColor=uCityColor;\n    // 流动范围当前点z的高度加上流动线的高度\n    float topY=vPosition.z+10.;\n    if(height>vPosition.z&&height<topY){\n        // 颜色渐变\n            float dIndex = sin((height - vPosition.z) / 10.0 * 3.14);\n            distColor = mix(uFlowColor, distColor, 1.0-dIndex);\n\n    }\n    //定位当前点位位置\n    vec2 position2D=vec2(vPosition.x,vPosition.y);\n    //求点到原点的距离\n    float Len=distanceTo(position2D,vec2(0,0));\n      if(Len>height*30.0&&Len<(height*30.0+130.0)){\n        // 颜色渐变\n        float dIndex = sin((Len - height*30.0) / 130.0 * 3.14);\n        distColor= mix(uFlowColor, distColor, 1.0-dIndex);\n    }\n    gl_FragColor=vec4(distColor,1.0);\n}`,\n        transparent: true,\n      });\n\n      const city = new THREE.Mesh(object.geometry, shader);\n      city.position.set(\n        object.position.x,\n        object.position.y,\n        object.position.z\n      );\n      scene.add(city);\n      // pickingScene.add(city);\n      city.rotateX(-Math.PI / 2);\n    },\n    setCityLineMaterial(object) {\n      const edges = new THREE.EdgesGeometry(object.geometry, 1);\n      //设置模型的材质\n      const lineMaterial = new THREE.LineBasicMaterial({\n        // 线的颜色\n        color: \"rgba(38,133,254)\",\n      });\n      //把数据组合起来\n      const lineS = new THREE.LineSegments(edges, lineMaterial);\n      //设置数据的位置\n      lineS.position.set(\n        object.position.x,\n        object.position.y,\n        object.position.z\n      );\n      //添加到场景\n      scene.add(lineS);\n\n      lineS.rotateX(-Math.PI / 2);\n    },\n    cityanimate() {\n      this.height.value += 0.2;\n      if (this.height.value > 100) {\n        this.height.value = 0.0;\n      }\n    },\n    creatWall() {\n      const wallData = {\n        position: {\n          x: -150,\n          y: 15,\n          z: 100,\n        },\n        speed: 0.5,\n        color: \"#efad35\",\n        opacity: 0.6,\n        radius: 420,\n        height: 120,\n        renderOrder: 5,\n      };\n\n      let wallMesh = new Wall(wallData);\n      wallMesh.mesh.material.uniforms.time = this.height;\n      scene.add(wallMesh.mesh);\n    },\n    creatRing() {\n      this.RunRing1 = new RunRing({\n        img: \"clice.png\",\n        scene: scene,\n        speed: 1,\n        radius: 400,\n        position: [\n          [400, 20, 400],\n          [100, 20, 1200],\n        ],\n      });\n    },\n    creatRunLine() {\n      this.runline1 = new RunLine({\n        img: \"z1.png\",\n        camera: camera,\n        height: 140,\n        v0: new THREE.Vector3(60, 18, -279),\n        v1: new THREE.Vector3(-17.5, 111.5, -23),\n        el: document.getElementById(\"scene\"),\n        scene: scene,\n        speed: 1,\n        lineWidth: 40,\n        type: \"run\",\n      });\n      this.runline2 = new RunLine({\n        img: \"z_112.png\",\n        camera: camera,\n        height: 140,\n        v0: new THREE.Vector3(-113, 44, 666),\n        v1: new THREE.Vector3(-17.5, 111.5, -23),\n        el: document.getElementById(\"scene\"),\n        scene: scene,\n        speed: 1,\n        lineWidth: 40,\n        type: \"run\",\n      });\n      this.runline3 = new RunLine({\n        img: \"z_11.png\",\n        camera: camera,\n        height: 140,\n        v0: new THREE.Vector3(-418, 113, -12),\n        v1: new THREE.Vector3(-17.5, 111.5, -23),\n        el: document.getElementById(\"scene\"),\n        scene: scene,\n        speed: 1,\n        lineWidth: 40,\n        type: \"run\",\n      });\n      this.runline5 = new RunLine({\n        img: \"n.png\",\n        camera: camera,\n        height: 140,\n        v0: new THREE.Vector3(614, 18, 130),\n        v1: new THREE.Vector3(-17.5, 111.5, -23),\n        el: document.getElementById(\"scene\"),\n        scene: scene,\n        speed: 1,\n        lineWidth: 40,\n        type: \"run\",\n      });\n    },\n    onDocumentMouseDown(event) {\n      this.gpuClick();\n      this.raycastClick(event);\n    },\n    raycastClick(event) {\n      event.preventDefault();\n      const vector = new THREE.Vector3(); // 三维坐标对象\n      vector.set(\n        (event.clientX / window.innerWidth) * 2 - 1,\n        -(event.clientY / window.innerHeight) * 2 + 1,\n        0.5\n      );\n      vector.unproject(camera);\n      const raycaster = new THREE.Raycaster(\n        camera.position,\n        vector.sub(camera.position).normalize()\n      );\n      const intersects = raycaster.intersectObjects(scene.children);\n      if (intersects.length > 0) {\n        const selected = intersects[0]; // 取第一个物体\n        console.log(`x坐标:${selected.point.x}`);\n        console.log(`y坐标:${selected.point.y}`);\n        console.log(`z坐标:${selected.point.z}`);\n      }\n    },\n    gpuClick() {\n      renderer.setRenderTarget(pickingTexture);\n      renderer.render(pickingScene, camera);\n    },\n  },\n  data() {\n    return {\n      height: {\n        value: 0,\n      },\n    };\n  },\n};\n</script>\n<style scoped>\nhtml,\nbody,\n#scene {\n  width: 100vw;\n  height: 100vh;\n  z-index: 2;\n  position: absolute;\n  top: 0%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}